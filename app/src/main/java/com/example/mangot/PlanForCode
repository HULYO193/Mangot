My work is all over the place so I need to  organize my work...
what to work on first and then onto the next thing:
1) create recycle view to dashboard(Only manga's name) - <3
2) create a class called "MangaStatus" that have : user name, Manga name, curr chapter, reading status( Reading , completed, dropped atc) - <3
2.1) Make Collection + sub-collections in FireBase <3
2.2) make a button to the adapter and give it a menu with a few options(mark as read,delete,edit{put the chap number the user read up to manually})
     + make a custom dialog for the button - <3
2.3) work on the add to dashboard(with all the thing the dashboard need to get[the manga data + make it a mangastatus so you can get it in the mangaadapter])
2.4) when you pass the manga to Dashboard you need you make a path for the manga's data under the user's collection as a document + the field of the manga(chapters and name)
    FireStore: MangaStatus -> Users email -> userManga's -> the manga with its data.
3) let the user be able to click on the Manga's name in the recycleview and lead the user to the "MangaActivity" with the Manga's Data -
4) create an activity class called ReaderActivity, It lets the user read the chapter's images by ascending order(with fragments maybe?) -
5) link the ReaderActivity  to the chapters in the MangaActivity(for every chapter it'll load the related images from the storage
{Mangot -> Manga's name -> chapterNum -> Images[first -> last]}) -


Checking the codes to make improvments:
1)Add manga to storage
2)Add chapter under ,manga's name + all the surroundings(chapters + 1, refresh the manga's page , etc)
3)Link a DashBoard to a user
4)link the Manga to the dashboard(and keep it there even when refreshed under the user)
5)custom dialog(make another spinner and delete button)


after everything is done in the code -> design the pages and I see fit



FireBase ---
FireStore -> 3 main collections - 1) Mangot- all the mangas in the storage (for search later on)
                                  2) Users - all the users that logged in.
                                  3) MangaStatus - 1 sub collection called userMangas - in the sub
                                     collection there will be collection's of user's emails and there
                                     will be all the manga's that the user have in the Dashboard.
                                     db.collection("MangaStatus").document(""+mAuth.getCurrentUser().getEmail()).collection("userMangas")

Storage -> gets all the manga's in the app  and create for every manga a folder for chapters.
Every chapter that will be uploaded will get in it's own manga folder.




dates and changes -
26/2/23 ->  keep working on chapterAdapter and finish it so you can finish working on the "addToDashboard" and the work on DashboardActivity;
27/2/23 ->  keep working with the "PlanForCode"
13/3/23 ->  the currChapters and status are automatically 0 and "Reading" :::: Keep working on the Front problem on CreateMangaActivity + Manga and link the Front to Storage
15/3/23 ->  finished the Front work + Started working on the data Reading on the Dashboard for the recyclerView for each User(+ the new manga that was added from MangaActivity[addToDahboard])
            keep working on the data reading + make the order of the chapters in MangaActivity upsidedown(check for bugs on the reading);
24/3/23 ->  finished working on "AddToDashbooard" ::: keep working on thedata reading with thr manga and mangaactivity from firebase and look for problems.